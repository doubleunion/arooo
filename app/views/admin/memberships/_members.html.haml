%table.table.table-striped.admin-console.js-datatable
  %thead
    %tr
      %th Name
      %th Google Email
      %th Status
      %th On scholarship?
      %th.min-width-150 Dues Paid On
      %th Notes
      %th Manage Status
  %tbody
    - users.each do |user|
      %tr{class: "user-#{user.id}"}
        %td.max-width-150
          - if user.name.present?
            = link_to user.name, members_user_path(user)
        - if user.email_for_google
          %td=user.email_for_google
        - else
          %td.admin-warning
            Not set
        %td= user.display_state
        %td
          = user.is_scholarship ? "Yes" : "No"
          = form_for user, url: admin_membership_path(user) do |f|
            = f.hidden_field(:id)
            = f.hidden_field(:is_scholarship, value: !user.is_scholarship)
            - if user.is_scholarship
              = f.submit "Remove scholarship", class: "btn", data: { confirm: "Are you sure? Note: This does not change the member's dues in Stripe." }
            - else
              = f.submit "Mark as on scholarship", class: "btn", data: { confirm: "Are you sure? Note: This does not change the member's dues in Stripe." }

        %td= user.last_stripe_charge_succeeded.strftime('%b %d %Y') if user.last_stripe_charge_succeeded
        %td
          = form_for :user, url: admin_save_membership_note_path, remote: true, html: { class: "js-membership-note js-membership-note-#{user.id}" } do |f|
            = f.hidden_field :id, value: user.id
            = f.text_area :membership_note, rows: 4, cols: 30, value: user.membership_note
            .submit
              = f.submit "Save Note", class: "btn"
              %span.collapse{class: "save-success-#{user.id}"} Note saved!
              %span.collapse{class: "save-failure-#{user.id}"} Note not saved :(

        %td.buttons
          - if user.voting_policy_agreement.present? && !user.voting_member?
            = form_for user, url: admin_change_membership_state_path(user) do |f|
              = f.hidden_field(:id)
              = f.hidden_field(:updated_state, value: :voting_member)
              = f.submit "Make Voting member", class: "btn accept-btn", data: { confirm: "Are you sure?" }
          - if user.voting_member?
            = form_for user, url: admin_change_membership_state_path(user) do |f|
              = f.hidden_field(:id)
              = f.hidden_field(:updated_state, value: :key_member)
              = f.submit "Revoke Voting membership", class: "btn reject-btn", data: { confirm: "Are you sure?" }
          - elsif user.key_member?
            = form_for user, url: admin_change_membership_state_path(user) do |f|
              = f.hidden_field(:id)
              = f.hidden_field(:updated_state, value: :member)
              = f.submit "Revoke Key membership", class: "btn reject-btn", data: { confirm: "Are you sure?" }
          - else
            = form_for user, url: admin_change_membership_state_path(user) do |f|
              = f.hidden_field(:id)
              = f.hidden_field(:updated_state, value: :key_member)
              = f.submit "Make Key member", class: "btn accept-btn", data: { confirm: "Are you sure?" }
          = form_for user, url: admin_change_membership_state_path(user) do |f|
            = f.hidden_field(:id)
            = f.hidden_field(:updated_state, value: :former_member)
            = f.submit "Revoke DU Membership", class: "btn reject-btn", data: { confirm: "Are you sure you'd like to cancel #{user.name}'s DU membership?" }
